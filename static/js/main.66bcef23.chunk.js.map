{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","scroll","hiddenImages","props","images","length","frameSize","handleForward","step","itemWidth","infinite","setState","prevState","handleBackward","this","animationDuration","className","style","width","map","image","index","transition","transform","src","imgPath","alt","id","type","disabled","onClick","React","Component","App","uuid","handlerOfInput","event","currenValue","currentTarget","value","htmlFor","min","max","defaultValue","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66bcef23.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: { imgPath: string, id: string }[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  scroll: number,\n  hiddenImages: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    scroll: 0,\n    hiddenImages: this.props.images.length - this.props.frameSize,\n  };\n\n  handleForward = () => {\n    const { hiddenImages } = this.state;\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    if (hiddenImages === 0 && infinite) {\n      this.setState({ scroll: 0, hiddenImages: images.length - frameSize });\n\n      return;\n    }\n\n    if (hiddenImages === 0 && !infinite) {\n      return;\n    }\n\n    if (hiddenImages >= step) {\n      this.setState(prevState => ({\n        hiddenImages: prevState.hiddenImages - step,\n        scroll: prevState.scroll + (itemWidth * step),\n      }));\n    } else {\n      this.setState(prevState => ({\n        scroll: prevState.scroll + (itemWidth * prevState.hiddenImages),\n        hiddenImages: 0,\n      }));\n    }\n  };\n\n  handleBackward = () => {\n    const { hiddenImages } = this.state;\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    if (hiddenImages === (images.length - frameSize) && infinite) {\n      this.setState({ scroll: itemWidth * hiddenImages, hiddenImages: 0 });\n\n      return;\n    }\n\n    if (hiddenImages === (images.length - frameSize) && !infinite) {\n      return;\n    }\n\n    if ((images.length - frameSize - hiddenImages) >= step) {\n      this.setState(prevState => ({\n        hiddenImages: prevState.hiddenImages + step,\n        scroll: prevState.scroll - (itemWidth * step),\n      }));\n    } else {\n      this.setState({ scroll: 0, hiddenImages: images.length - frameSize });\n    }\n  };\n\n  render() {\n    const { scroll, hiddenImages } = this.state;\n    const {\n      images,\n      itemWidth,\n      animationDuration,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <ul className=\"Carousel__list\" style={{ width: `${frameSize * itemWidth}px` }}>\n          {images.map((image, index) => {\n            return (\n              <>\n                <li\n                  className=\"Carousel__item\"\n                  key={image.id}\n                  style={{\n                    transition: `${animationDuration}ms`,\n                    transform: `translate(-${scroll}px)`,\n                  }}\n                >\n                  <img\n                    src={image.imgPath}\n                    alt={`${index}`}\n                    style={{ width: `${itemWidth}px` }}\n                  />\n                </li>\n              </>\n            );\n          })}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button Carousel__button--backward\"\n            disabled={hiddenImages === (images.length - frameSize) && !infinite}\n            onClick={this.handleBackward}\n          >\n            {'<'}\n          </button>\n\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className=\"Carousel__button Carousel__button--forward\"\n            disabled={hiddenImages === 0 && !infinite}\n            onClick={this.handleForward}\n          >\n            {'>'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport 'react-native-get-random-values';\nimport { v4 as uuid } from 'uuid';\nimport { Carousel } from './components/Carousel';\n\ntype State = {\n  images: { imgPath: string, id: string }[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      {\n        imgPath: './img/1.png',\n        id: uuid(),\n      },\n      {\n        imgPath: './img/2.png',\n        id: uuid(),\n      },\n      {\n        imgPath: './img/3.png',\n        id: uuid(),\n      },\n      {\n        imgPath: './img/4.png',\n        id: uuid(),\n      },\n      {\n        imgPath: './img/5.png',\n        id: uuid(),\n      },\n      {\n        imgPath: './img/6.png',\n        id: uuid(),\n      },\n      {\n        imgPath: './img/7.png',\n        id: uuid(),\n      },\n      {\n        imgPath: './img/8.png',\n        id: uuid(),\n      },\n      {\n        imgPath: './img/9.png',\n        id: uuid(),\n      },\n      {\n        imgPath: './img/10.png',\n        id: uuid(),\n      },\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handlerOfInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const currenValue = +(event.currentTarget.value);\n    const { id } = event.currentTarget;\n\n    switch (id) {\n      case 'step':\n        this.setState({ step: currenValue });\n        break;\n      case 'itemWidth':\n        this.setState({ itemWidth: currenValue });\n        break;\n      case 'frameSize':\n        this.setState({ frameSize: currenValue });\n        break;\n      case 'animationDuration':\n        this.setState({ animationDuration: currenValue });\n        break;\n      case 'infinite':\n        this.setState(prevState => ({ infinite: !prevState.infinite }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          data-cy=\"title\"\n          className=\"App__title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <form className=\"App__form\">\n          <label htmlFor=\"itemWidth\" className=\"App__label\">\n            <span className=\"App__inputName\">item width:</span>\n\n            <input\n              type=\"number\"\n              id=\"itemWidth\"\n              className=\"App__input\"\n              min=\"50\"\n              max=\"500\"\n              step=\"10\"\n              defaultValue={itemWidth}\n              onChange={this.handlerOfInput}\n            />\n          </label>\n\n          <label htmlFor=\"frameSize\" className=\"App__label\">\n            <span className=\"App__inputName\">frame size:</span>\n\n            <input\n              type=\"number\"\n              id=\"frameSize\"\n              className=\"App__input\"\n              min=\"1\"\n              max=\"10\"\n              defaultValue={frameSize}\n              onChange={this.handlerOfInput}\n            />\n          </label>\n\n          <label htmlFor=\"step\" className=\"App__label\">\n            <span className=\"App__inputName\">step:</span>\n\n            <input\n              type=\"number\"\n              id=\"step\"\n              className=\"App__input\"\n              min=\"1\"\n              max=\"5\"\n              defaultValue={step}\n              onChange={this.handlerOfInput}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\" className=\"App__label\">\n            <span className=\"App__inputName\">animation duration:</span>\n\n            <input\n              type=\"number\"\n              id=\"animationDuration\"\n              className=\"App__input\"\n              min=\"100\"\n              max=\"3000\"\n              step=\"100\"\n              defaultValue={animationDuration}\n              onChange={this.handlerOfInput}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\" className=\"App__label\">\n            <span className=\"App__inputName\">infinite:</span>\n\n            <input\n              type=\"checkbox\"\n              id=\"infinite\"\n              className=\"App__input--checkbox\"\n              defaultValue={`${infinite}`}\n              onChange={this.handlerOfInput}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={this.state.step}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          animationDuration={this.state.animationDuration}\n          infinite={this.state.infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}